
name: cd
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGION: ${{ vars.GCP_REGION }}
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REPO: ${{ vars.ARTIFACT_REPO || 'apps' }}
  SERVICE: ${{ vars.CLOUD_RUN_SERVICE || 'secure-node-api' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Auth to GCP (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev"

      - name: Build & Push image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build -t "$IMAGE" ./app
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform plan & apply (infra + Cloud Run)
        working-directory: infra
        env:
          TF_VAR_project_id: ${{ env.PROJECT_ID }}
          TF_VAR_region: ${{ env.REGION }}
          TF_VAR_image: ${{ env.IMAGE }}
          TF_VAR_deployer_service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          TF_VAR_chat_webhook_url: ${{ secrets.CHAT_WEBHOOK_URL }}
          TF_VAR_alert_email: ${{ secrets.ALERT_EMAIL }}
        run: |
          terraform init -input=false
          terraform plan -input=false -out=tfplan
          terraform apply -input=false -auto-approve tfplan

      - name: Smoke test
        run: |
          echo "Deployed image: $IMAGE"
          # Hitting /healthz is possible only if ingress allows public/ILB; otherwise skip or run internal test.
